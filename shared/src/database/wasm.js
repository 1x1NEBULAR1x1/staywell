
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.13.0
 * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
 */
Prisma.prismaVersion = {
  client: "6.13.0",
  engine: "361e86d0ea4987e9f53a565309b3eed797a6bcbd"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password_hash: 'password_hash',
  image: 'image',
  first_name: 'first_name',
  last_name: 'last_name',
  phone_number: 'phone_number',
  date_of_birth: 'date_of_birth',
  is_active: 'is_active',
  email_verified: 'email_verified',
  phone_verified: 'phone_verified',
  role: 'role',
  created: 'created',
  updated: 'updated'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  sender_id: 'sender_id',
  receiver_id: 'receiver_id',
  message: 'message',
  is_read: 'is_read',
  booking_id: 'booking_id',
  edited: 'edited',
  replace_to: 'replace_to',
  is_excluded: 'is_excluded',
  created: 'created',
  updated: 'updated'
};

exports.Prisma.ApartmentScalarFieldEnum = {
  id: 'id',
  image: 'image',
  name: 'name',
  description: 'description',
  rules: 'rules',
  number: 'number',
  floor: 'floor',
  rooms_count: 'rooms_count',
  max_capacity: 'max_capacity',
  is_available: 'is_available',
  is_smoking: 'is_smoking',
  is_pet_friendly: 'is_pet_friendly',
  deposit: 'deposit',
  type: 'type',
  created: 'created',
  updated: 'updated',
  is_excluded: 'is_excluded'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  apartment_id: 'apartment_id',
  booking_id: 'booking_id',
  rating: 'rating',
  comment: 'comment',
  created: 'created',
  updated: 'updated',
  is_excluded: 'is_excluded'
};

exports.Prisma.AmenityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  image: 'image',
  description: 'description',
  created: 'created',
  updated: 'updated',
  is_excluded: 'is_excluded'
};

exports.Prisma.ApartmentAmenityScalarFieldEnum = {
  id: 'id',
  amenity_id: 'amenity_id',
  apartment_id: 'apartment_id',
  created: 'created',
  updated: 'updated',
  is_excluded: 'is_excluded'
};

exports.Prisma.ApartmentImageScalarFieldEnum = {
  id: 'id',
  image: 'image',
  name: 'name',
  description: 'description',
  apartment_id: 'apartment_id',
  created: 'created',
  updated: 'updated',
  is_excluded: 'is_excluded'
};

exports.Prisma.BedTypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  image: 'image',
  created: 'created',
  updated: 'updated',
  is_excluded: 'is_excluded'
};

exports.Prisma.ApartmentBedScalarFieldEnum = {
  id: 'id',
  apartment_id: 'apartment_id',
  bed_type_id: 'bed_type_id',
  count: 'count',
  created: 'created',
  updated: 'updated',
  is_excluded: 'is_excluded'
};

exports.Prisma.BookingVariantScalarFieldEnum = {
  id: 'id',
  apartment_id: 'apartment_id',
  price: 'price',
  capacity: 'capacity',
  is_available: 'is_available',
  created: 'created',
  updated: 'updated',
  is_excluded: 'is_excluded'
};

exports.Prisma.ReservationScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  apartment_id: 'apartment_id',
  start: 'start',
  end: 'end',
  created: 'created',
  updated: 'updated'
};

exports.Prisma.BookingScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  booking_variant_id: 'booking_variant_id',
  transaction_id: 'transaction_id',
  message: 'message',
  status: 'status',
  start: 'start',
  end: 'end',
  created: 'created',
  updated: 'updated'
};

exports.Prisma.AdditionalOptionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  image: 'image',
  price: 'price',
  created: 'created',
  updated: 'updated',
  is_excluded: 'is_excluded'
};

exports.Prisma.BookingAdditionalOptionScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  option_id: 'option_id',
  booking_id: 'booking_id',
  created: 'created',
  updated: 'updated'
};

exports.Prisma.BookingEventScalarFieldEnum = {
  id: 'id',
  number_of_people: 'number_of_people',
  booking_id: 'booking_id',
  event_id: 'event_id',
  transaction_id: 'transaction_id',
  created: 'created',
  updated: 'updated',
  is_excluded: 'is_excluded'
};

exports.Prisma.TransactionScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  user_id: 'user_id',
  description: 'description',
  card_details_id: 'card_details_id',
  transfer_details_id: 'transfer_details_id',
  transaction_type: 'transaction_type',
  transaction_status: 'transaction_status',
  payment_method: 'payment_method',
  created: 'created',
  updated: 'updated'
};

exports.Prisma.TransferDetailScalarFieldEnum = {
  id: 'id',
  bank_name: 'bank_name',
  account_number: 'account_number',
  swift: 'swift',
  payer_name: 'payer_name',
  user_id: 'user_id',
  created: 'created',
  updated: 'updated'
};

exports.Prisma.CardDetailScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  number: 'number',
  expiry_month: 'expiry_month',
  expiry_year: 'expiry_year',
  holder: 'holder',
  token: 'token',
  created: 'created',
  updated: 'updated',
  is_excluded: 'is_excluded'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  name: 'name',
  image: 'image',
  description: 'description',
  guide_id: 'guide_id',
  price: 'price',
  capacity: 'capacity',
  start: 'start',
  end: 'end',
  created: 'created',
  updated: 'updated',
  is_excluded: 'is_excluded'
};

exports.Prisma.EventImageScalarFieldEnum = {
  id: 'id',
  name: 'name',
  image: 'image',
  description: 'description',
  event_id: 'event_id',
  created: 'created',
  updated: 'updated',
  is_excluded: 'is_excluded'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  ADMIN: 'ADMIN',
  GUIDE: 'GUIDE'
};

exports.ApartmentType = exports.$Enums.ApartmentType = {
  BUDGET: 'BUDGET',
  STANDARD: 'STANDARD',
  EXCLUSIVE: 'EXCLUSIVE',
  SUPERIOR: 'SUPERIOR',
  LUXURY: 'LUXURY'
};

exports.BookingStatus = exports.$Enums.BookingStatus = {
  PENDING: 'PENDING',
  CONFIRMED: 'CONFIRMED',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

exports.TransactionType = exports.$Enums.TransactionType = {
  DEPOSIT: 'DEPOSIT',
  PAYMENT: 'PAYMENT',
  REFUND: 'REFUND',
  FINE: 'FINE'
};

exports.TransactionStatus = exports.$Enums.TransactionStatus = {
  PENDING: 'PENDING',
  SUCCESS: 'SUCCESS',
  CANCELED: 'CANCELED',
  FAILED: 'FAILED'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  CASH: 'CASH',
  CARD: 'CARD',
  TRANSFER: 'TRANSFER'
};

exports.Prisma.ModelName = {
  User: 'User',
  Message: 'Message',
  Apartment: 'Apartment',
  Review: 'Review',
  Amenity: 'Amenity',
  ApartmentAmenity: 'ApartmentAmenity',
  ApartmentImage: 'ApartmentImage',
  BedType: 'BedType',
  ApartmentBed: 'ApartmentBed',
  BookingVariant: 'BookingVariant',
  Reservation: 'Reservation',
  Booking: 'Booking',
  AdditionalOption: 'AdditionalOption',
  BookingAdditionalOption: 'BookingAdditionalOption',
  BookingEvent: 'BookingEvent',
  Transaction: 'Transaction',
  TransferDetail: 'TransferDetail',
  CardDetail: 'CardDetail',
  Event: 'Event',
  EventImage: 'EventImage'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
